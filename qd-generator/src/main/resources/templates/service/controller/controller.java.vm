package $!{cfg.basePackage}.controller;

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.lhd.qd.base.QdBaseController;
import com.lhd.qd.constant.http.ApiResult;
import $!{cfg.basePackage}.model.dto.$!{entity}PageQuery;
import $!{cfg.basePackage}.model.dto.$!{entity}SaveDTO;
import $!{cfg.basePackage}.model.vo.$!{entity}DetailVO;
import $!{cfg.basePackage}.model.vo.$!{entity}ListVO;
import $!{cfg.basePackage}.service.$!{entity}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author $!{author}
 * @since $!{date}
 */
@RestController
@Api(tags = "$!{table.comment}")
@RequestMapping("#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
public class $!{entity}Controller extends QdBaseController {

    @Autowired
    private $!{entity}Service service;

    @ApiOperation(value = "列表", response = $!{entity}ListVO.class)
    @GetMapping
    public ApiResult<IPage<$!{entity}ListVO>> getPage($!{entity}PageQuery query) {

        return success(service.page$!{entity}(query));
    }

    @ApiOperation(value = "详情", response = $!{entity}DetailVO.class)
    @GetMapping(value = "{id}")
    public ApiResult<$!{entity}DetailVO> getById(@PathVariable("id") Long id) {

        return success(service.get$!{entity}ById(id));
    }

    @ApiOperation(value = "新增")
    @PostMapping
    public ApiResult save(@Validated @RequestBody $!{entity}SaveDTO saveDTO) {

        service.save$!{entity}(saveDTO);

        return success();
    }

    @ApiOperation(value = "修改")
    @PutMapping(value = "{id}")
    public ApiResult update(@PathVariable("id") Long id, @Validated @RequestBody $!{entity}SaveDTO saveDTO) {

        service.update$!{entity}(id, saveDTO);

        return success();
    }

    @ApiOperation(value = "删除")
    @DeleteMapping(value = "{id}")
    public ApiResult remove(@PathVariable("id") Long id) {

        service.remove$!{entity}(id);

        return success();
    }

    @ApiOperation(value = "批量删除")
    @DeleteMapping(value = "batch")
    public ApiResult batchRemove(@RequestBody List<Long> idList) {

        service.batchRemove$!{entity}(idList);

        return success();
    }
}